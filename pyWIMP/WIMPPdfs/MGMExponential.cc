 /***************************************************************************** 
  * Project: RooFit                                                           * 
  *                                                                           * 
  * This code was autogenerated by RooClassFactory                            * 
  *****************************************************************************/ 

 // Your description goes here... 

#include "MGMExponential.hh" 
#include "MGMPiecewiseRegions.hh"


 ClassImp(MGMExponential) 

Double_t MGMExponential::evaluate() const 
{ 
  if (!fRegions || fRegions->IsInAcceptedRegion(x)) return RooExponential::evaluate();
  // Otherwise it is in a region which we have inserted, return 0
  //return 0;
  return 1e-16;
} 

Double_t MGMExponential::analyticalIntegral(Int_t code, const char* rangeName) const
{
   assert(code==1);
   if (!fRegions) return RooExponential::analyticalIntegral(code, rangeName); 
   Double_t max = x.max(rangeName);
   Double_t min = x.min(rangeName);
   Double_t sum = 0.0;
   fRegions->InitializeRegionIterator(min, max);
   const MGMPiecewiseRegions::MGMRegion* reg;
   if ( c == 0.0 ) {
     while ( (reg = fRegions->GetNextRegion()) ) sum += reg->fEnd - reg->fBegin;
   } else {
     while ( (reg = fRegions->GetNextRegion()) ) { 
       sum += ( exp( c*reg->fEnd ) - exp( c*reg->fBegin) )/c;
     }
   }
   return sum; 
}

