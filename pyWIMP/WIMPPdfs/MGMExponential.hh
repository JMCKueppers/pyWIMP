/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef _MGMExponential_hh_
#define _MGMExponential_hh_

#include "RooExponential.h"
class MGMPiecewiseRegions;
 
class MGMExponential : public RooExponential {
public:
  MGMExponential() : RooExponential() {} ; 
  MGMExponential(const char *name, const char *title,
	      RooAbsReal& _x, RooAbsReal& _c) : RooExponential(name, title, _x, _c), fRegions(0) {}
  MGMExponential(const MGMExponential& other, const char* name=0) : RooExponential(other, name), fRegions(other.fRegions) {}
  virtual TObject* clone(const char* newname) const { return new MGMExponential(*this,newname); }
  inline virtual ~MGMExponential() {}

  void SetRegionsOfValidity(const MGMPiecewiseRegions* reg) { fRegions = reg; }

  Double_t analyticalIntegral(Int_t code, const char* rangeName) const;
protected:
  
  Double_t evaluate() const ;
  const MGMPiecewiseRegions* fRegions;

private:

  ClassDef(MGMExponential,1) // Your description goes here...
};
 
#endif
